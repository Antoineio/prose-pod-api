#!/bin/bash

# Configure the script to exit when a command fails.
set -e

: ${SCRIPTS_ROOT:="$(dirname $0)"/..}
export SCRIPTS_ROOT
source "$(dirname $0)"/util.sh
source "$(dirname $0)"/constants.sh

# ===== HELPER FUNCTIONS =====

description() {
	cat <<EOF
${Bold}Cleans up a remote $(format_code prose-pod-system).${Bold_Off}

Does not delete the repository, just the data generated by running it.
EOF
}

usage() {
	cat <<EOF
$(format_title 'Usage:')
  You want to deinitialize the ProseÂ Pod from a Raspberry Pi:
    $(format_command $(basename $0))

$(format_title 'Options:')
  $(format_subtitle 'Miscellaneous options:')
    $(format_flag --help)
      Explains what the command does and how to use it.
EOF
}

help() {
	printf "$(description)\n"
	echo ''
	printf "$(usage)\n"
	exit 0
}

# ===== ARGUMENT PARSING =====

for arg in "$@"; do
	case $arg in
		--help) help ;;
		*) die "Unknown argument: ${arg}\n$(usage)" ;;
	esac
done

# ===== MAIN LOGIC =====

rpi_ssh '# Clean things up
	echo '"''"' > '"'${REMOTE_PROSE_POD_SYSTEM_DIR:?}'"'/database.sqlite
	rm '"'${REMOTE_SERVER_ROOT:?}'"'/etc/prosody/prosody.cfg.lua 2>/dev/null || :
	rm -r '"'${REMOTE_SERVER_ROOT:?}'"'/var/lib/prosody/*%2e* 2>/dev/null || :'
