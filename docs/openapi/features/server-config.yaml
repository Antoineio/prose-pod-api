paths:
  is_server_initialized:
    tags: [Init]
    summary: Is the XMPP server initialized?
    description: Query whether or not the XMPP server has already been initialized.
    operationId: is_server_initialized
    security: []
    parameters:
      - in: header
        name: If-None-Match
        schema:
          type: string
          const: "*"
        required: true
    responses:
      "204":
        description: XMPP server initialized
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "428": { $ref: "../shared.yaml#/components/responses/PreconditionRequired" }
  init_server_config:
    tags: [Init]
    summary: Initialize the XMPP server
    description: Initializes the XMPP server and returns its default configuration.
    operationId: init_server_config
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - domain
            properties:
              domain:
                type: string
                example: crisp.chat
    responses:
      "201":
        description: Success
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ServerConfig" }
        headers:
          Location: { $ref: "../shared.yaml#/components/headers/Location" }
      "409": { $ref: "#/components/responses/ServerConfigAlreadyInitialized" }
  get_server_config:
    tags: ["Server / Configuration"]
    summary: Get server config
    description: Get the current configuration of the XMPP server.
    operationId: get_server_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_file_upload_allowed:
    tags: ["Server / Configuration"]
    summary: Change file upload settings
    description: Activate or deactivate file upload and sharing.
    operationId: set_file_upload_allowed
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - file_upload_allowed
            properties:
              file_upload_allowed:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_file_storage_retention:
    tags: ["Server / Configuration"]
    summary: Change uploaded files retention
    description: Change the retention of uploaded files.
    operationId: set_file_storage_retention
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - file_storage_retention
            properties:
              file_storage_retention:
                oneOf:
                  - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
                  - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_file_storage_encryption_scheme:
    tags: ["Server / Configuration"]
    summary: Change file storage encryption scheme
    description: Change the file storage encryption scheme.
    operationId: set_file_storage_encryption_scheme
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_messaging_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Messaging' configuration
    description: Reset the 'Messaging' configuration to its default value.
    operationId: reset_messaging_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_message_archive_retention:
    tags: ["Server / Configuration"]
    summary: Change message archive retention
    description: Update message archive retention.
    operationId: set_message_archive_retention
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - message_archive_retention
            properties:
              message_archive_retention:
                oneOf:
                  - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
                  - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_message_archive_retention:
    tags: ["Server / Configuration"]
    summary: Reset message archive retention
    description: Reset the message archive retention to its default value.
    operationId: reset_message_archive_retention
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_files_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Files' configuration
    description: Reset the 'Files' configuration to its default value.
    operationId: reset_files_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_message_archive_enabled:
    tags: ["Server / Configuration"]
    summary: Activate or deactivate message archiving
    description: Activate or deactivate message archiving.
    operationId: set_message_archive_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - message_archive_enabled
            properties:
              message_archive_enabled:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_push_notifications_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notifications' configuration
    description: Reset the 'Push notifications' configuration to its default value.
    operationId: reset_push_notifications_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_push_notification_with_body:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notification with body'
    description: Reset 'Push notification with body' to its default value.
    operationId: reset_push_notification_with_body
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_push_notification_with_body:
    tags: ["Server / Configuration"]
    summary: Change 'Push notification with body'
    description: Whether or not to send the real message body to remote pubsub node.
      Without end-to-end encryption, enabling this may expose your message
      contents to your client developers and OS vendor. Not recommended.
    operationId: set_push_notification_with_body
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - push_notification_with_body
            properties:
              push_notification_with_body:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_push_notification_with_sender:
    tags: ["Server / Configuration"]
    summary: Reset 'Push notification with sender'
    description: Reset 'Push notification with sender' to its default value.
    operationId: reset_push_notification_with_sender
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_push_notification_with_sender:
    tags: ["Server / Configuration"]
    summary: Change 'Push notification with sender'
    description: Whether or not to send the real message sender to remote pubsub
      node. Enabling this may expose your contacts to your client developers and
      OS vendor. Not recommended.
    operationId: set_push_notification_with_sender
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - push_notification_with_sender
            properties:
              push_notification_with_sender:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_network_encryption_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Network encryption' configuration
    description: Reset the 'Network encryption' configuration to its default value.
    operationId: reset_network_encryption_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_tls_profile:
    tags: ["Server / Configuration"]
    summary: Reset 'TLS profile'
    description: Reset 'TLS profile' to its default value.
    operationId: reset_tls_profile
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_tls_profile:
    tags: ["Server / Configuration"]
    summary: Change 'TLS profile'
    description: Whether or not to send the real message sender to remote pubsub
      node. Enabling this may expose your contacts to your client developers and
      OS vendor. Not recommended.
    operationId: set_tls_profile
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - tls_profile
            properties:
              tls_profile: { $ref: "#/components/schemas/TlsProfile" }
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_server_federation_config:
    tags: ["Server / Configuration"]
    summary: Reset 'Server federation' configuration
    description: Reset the 'Server federation' configuration to its default value.
    operationId: reset_server_federation_config
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_enabled:
    tags: ["Server / Configuration"]
    summary: Reset 'Federation enabled'
    description: Reset 'Federation enabled' to its default value.
    operationId: reset_federation_enabled
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_federation_enabled:
    tags: ["Server / Configuration"]
    summary: Change 'Federation enabled'
    description: |
      Allowing other servers to connect will enable federation.
      This lets users from other Prose workspaces connect with users in this workspace.
      For more safety, whitelist friendly servers.
    operationId: set_federation_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - federation_enabled
            properties:
              federation_enabled:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_whitelist_enabled:
    tags: ["Server / Configuration"]
    summary: Reset 'Federation whitelist enabled'
    description: Reset 'Federation whitelist enabled' to its default value.
    operationId: reset_federation_whitelist_enabled
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_federation_whitelist_enabled:
    tags: ["Server / Configuration"]
    summary: Change 'Federation whitelist enabled'
    description: |
      Whether or not to enable server whitelisting. Caution: If a whitelist is set but disabled,
      your server will still federate with the entire XMPP network.
    operationId: set_federation_whitelist_enabled
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - federation_whitelist_enabled
            properties:
              federation_whitelist_enabled:
                type: boolean
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  reset_federation_friendly_servers:
    tags: ["Server / Configuration"]
    summary: Reset 'Friendly servers'
    description: Reset 'Friendly servers' to its default value.
    operationId: reset_federation_friendly_servers
    security:
      - BearerAuth: []
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
  set_federation_friendly_servers:
    tags: ["Server / Configuration"]
    summary: Change 'Friendly servers'
    description: |
      If a whitelist is defined, then other servers will not be allowed to connect to this server,
      except whitelisted ones. It is recommended to whitelist servers you typically work with,
      ie. other teams.
    operationId: set_federation_friendly_servers
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - federation_friendly_servers
            properties:
              federation_friendly_servers:
                type: array
                items:
                  type: string
                  format: domain-name
    responses:
      "200": { $ref: "#/components/responses/ServerConfig" }
      "412": { $ref: "#/components/responses/ServerConfigNotInitialized" }
      "401": { $ref: "../shared.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../shared.yaml#/components/responses/Forbidden" }
components:
  schemas:
    ServerConfig:
      type: object
      required:
        - domain
        - message_archive_enabled
        - message_archive_retention
        - file_upload_allowed
        - file_storage_encryption_scheme
        - file_storage_retention
        - mfa_required
        - tls_profile
        - federation_enabled
        - federation_whitelist_enabled
        - federation_friendly_servers
        - settings_backup_interval
        - user_data_backup_interval
        - push_notification_with_body
        - push_notification_with_sender
      properties:
        domain:
          type: string
          example: crisp.chat
        message_archive_enabled:
          type: boolean
          default: true
        message_archive_retention:
          oneOf:
            - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
            - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
          default: infinite
        file_upload_allowed:
          type: boolean
          default: true
        file_storage_encryption_scheme:
          type: string
          default: AES-256
        file_storage_retention:
          oneOf:
            - $ref: "../shared.yaml#/components/schemas/DurationDateLike"
            - $ref: "../shared.yaml#/components/schemas/DurationInfinite"
          default: infinite
        mfa_required:
          title: Require Multi-Factor Authentication
          description: Whether or not [Multi-Factor Authentication
            (MFA)](https://en.wikipedia.org/wiki/Multi-factor_authentication) is
            required for users to log into their account.
          type: boolean
          default: true
        tls_profile: { $ref: "#/components/schemas/TlsProfile" }
        federation_enabled:
          description: |
            Whether or not the XMPP server should support interdomain federation.
            For more information, see [RFC 6120, section 13.14](https://www.rfc-editor.org/rfc/rfc6120#section-13.14).
          type: boolean
          default: false
        federation_whitelist_enabled:
          description: Turn on to federate with only a selected list of other XMPP servers.
          type: boolean
          default: false
        federation_friendly_servers:
          description: List of XMPP servers authorized for server-to-server communications (federation).
          type: array
          items:
            type: string
            format: domain-name
        settings_backup_interval:
          type: string
          format: duration
          default: P1D
        user_data_backup_interval:
          type: string
          format: duration
          default: P1W
        push_notification_with_body:
          description: Whether or not to send the real message body to remote pubsub node.
            Without end-to-end encryption, enabling this may expose your message
            contents to your client developers and OS vendor. Not recommended.
          type: boolean
          default: false
        push_notification_with_sender:
          description: Whether or not to send the real message sender to remote pubsub
            node. Enabling this may expose your contacts to your client
            developers and OS vendor. Not recommended.
          type: boolean
          default: false
    TlsProfile:
      title: TLS profile
      description: |
        The [TLS](https://fr.wikipedia.org/wiki/Transport_Layer_Security) profile to use
        (see [Security/Server Side TLS - MozillaWiki](https://wiki.mozilla.org/Security/Server_Side_TLS)
        for more explanation).
      type: string
      enum: [modern, intermediate, old]
      default: modern
    ServerConfigNotInitialized:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          const: server_config_not_initialized
  responses:
    ServerConfig:
      description: Success
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ServerConfig" }
    ServerConfigAlreadyInitialized:
      description: XMPP server already initialized
      content:
        application/json:
          schema:
            $ref: "../shared.yaml#/components/schemas/Error"
            properties:
              error:
                const: server_config_already_initialized
          example:
            error: server_config_already_initialized
    ServerConfigNotInitialized:
      description: XMPP server not initialized
      content:
        application/json:
          schema: { $ref: "#/components/schemas/ServerConfigNotInitialized" }
