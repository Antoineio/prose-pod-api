# See <https://taskfile.dev/usage> and <https://taskfile.dev/reference/schema>
# to find all keys and their usage.
version: "3"

silent: true
dotenv: [paths.env]
env:
  SELF: task {{ .ALIAS | default .TASK }} --

tasks:
  reset-db:
    desc: Backs up the database and resets it using `sea-orm-cli`.
    cmd: "{{.ROOT_DIR}}/scripts/reset-db"

  entity:
    desc: Generates database entities using `sea-orm-cli`.
    deps: [reset-db]
    cmd: sea-orm-cli generate entity -o entity/src --lib \
      --tables "$(TABLES)" \
      --with-serde both \
      --serde-skip-deserializing-primary-key \
      --serde-skip-hidden-column

  format-all:
    desc: Formats all Rust files.
    cmd: cargo fmt

  format:
    desc: Formats modified Rust files.
    cmd: "{{.ROOT_DIR}}/.githooks/pre-commit"

  test:
    desc: Runs all tests and updates "Tested at Rust version" in the `README`.
    deps: [smoke-test, integration-test]
    vars:
      RUST_VERSION:
        sh: rustc --version
    cmds:
      - cmd: "sed -i -E 's/(Tested at Rust version: `).+(`)/\\1{{.RUST_VERSION}}\\2/' README.md"
        platforms: [linux]
      - cmd: "sed -i '' -E 's/(Tested at Rust version: `).+(`)/\\1{{.RUST_VERSION}}\\2/' README.md"
        platforms: [darwin]

  smoke-test:
    desc: Runs smoke tests.
    cmd: cargo test --test behavior -- {{.CLI_ARGS}}

  integration-test:
    desc: Runs integration tests.
    env:
      # NOTE: Analytics are temporarily disabled because of [stepci/stepci#239](https://github.com/stepci/stepci/issues/239).
      STEPCI_DISABLE_ANALYTICS: true
    cmd: "{{.ROOT_DIR}}/scripts/integration-test {{.CLI_ARGS}}"

  update:
    desc: Updates all dependencies.
    deps: [update-redoc]
    cmds:
      # NOTE: `cargo update` updates all workspace member crates
      - echo '[INFO] Updating Rust dependencies…'
      - rustup upgrade
      - cargo update

  check-for-outdated-dependencies:
    desc: Checks for outdated dependencies.
    cmd: if cargo install --list | grep -q '^cargo-edit v'; then \
      echo '[INFO] Checking for outdated dependencies…'; \
      cargo upgrade --dry-run --incompatible --pinned --verbose; \
      else \
      echo '[WARN] Install `cargo upgrade` with `cargo install cargo-edit` for this script to check for outdated dependencies'; \
      fi

  update-redoc:
    desc: Updates Redoc.
    cmds:
      - echo '[INFO] Updating Redoc…'
      #- wget -q https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js -O crates/api/static/api-docs/redoc.standalone.js
      # NOTE(RemiBardon): I replaced `wget` by `curl` because `wget` fails with exit code 5 (SSL verification failure)
      #   on my machine while `curl` does not.
      - curl https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js --output crates/rest-api/static/api-docs/redoc.standalone.js 2>/dev/null

  release:
    desc: Creates a release (bumps version number, then adds and pushes a tag).
    env:
      REPOSITORY_ROOT: "{{.ROOT_DIR}}"
    cmd: "{{.ROOT_DIR}}/scripts/release {{.CLI_ARGS}}"

  build-image:
    desc: Builds the Prose Pod API Docker image. Run `task build-image -- --help` for more info.
    env:
      SCRIPTS_ROOT: "{{.ROOT_DIR}}/scripts"
    cmd: "{{.ROOT_DIR}}/scripts/build-image {{.CLI_ARGS}}"

  local-init:
    desc: Initializes a local environment allowing one to run a Prose Pod API in one command (`task local-run`).
    cmd: "{{.ROOT_DIR}}/scripts/run-locally/init {{.CLI_ARGS}}"

  local-run:
    desc: Runs a Prose Pod API.
    cmd: "{{.ROOT_DIR}}/scripts/run-locally/run {{.CLI_ARGS}}"

  local-update:
    desc: Updates the Prose Pod API and the repositories it depends on to get the latest updates.
    cmd: "{{.ROOT_DIR}}/scripts/run-locally/update {{.CLI_ARGS}}"

  local-build:
    desc: Builds the Prose Pod API and the repositories it depends on without updating the code.
    cmd: "{{.ROOT_DIR}}/scripts/run-locally/build-images {{.CLI_ARGS}}"

  local-reset:
    desc: Starts fresh with a Prose Pod API that has no data.
    prompt: This command will delete all your local Prose data, do you want to continue?
    cmd: "{{.ROOT_DIR}}/scripts/run-locally/reset {{.CLI_ARGS}}"

  openapi-lint:
    desc: Lint the OpenAPI specification file.
    cmd: "{{.ROOT_DIR}}/scripts/openapi-lint {{.CLI_ARGS}}"

  openapi-preview-docs:
    desc: Preview the OpenAPI specification file in a graphical interface.
    cmd: "{{.ROOT_DIR}}/scripts/openapi-preview-docs {{.CLI_ARGS}}"
