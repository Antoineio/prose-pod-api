#!/bin/bash

# Configure the script to exit when a command fails.
set -e

: ${SCRIPTS_ROOT:="$(dirname $0)"/../../scripts}
export SCRIPTS_ROOT
source "${SCRIPTS_ROOT:?}"/util.sh

# ===== CONSTANTS =====

LOCAL_RUN_DIR="${PROSE_POD_API_DIR:?}"/local-run
SELF_SCRIPTS="${LOCAL_RUN_DIR:?}"/scripts
source "${SELF_SCRIPTS:?}"/constants.sh
BASE_SCENARIO_NAME="${DEFAULT_SCENARIO_NAME:?}"

# ===== ARGUMENT PARSING =====

SCENARIO_NAME="${1:?}"
shift 1

for arg in "$@"; do
	case $arg in
		--based-on=*)
			BASE_SCENARIO_NAME="${arg#'--based-on='}"
			;;
		--help) help ;;
		--dry-run) export DRY_RUN=1 ;;
		--debug) export LOG_DEBUG=1 ;;
		--trace) export LOG_TRACE=1 ;;
		*) die "Unknown argument: $(format_code $arg).\n$(usage)" ;;
	esac
done

# ===== MAIN LOGIC =====

[ -d "${SCENARIOS_DIR:?}"/"${SCENARIO_NAME:?}" ] && die "The scenario $(format_code "${SCENARIO_NAME:?}") already exists. Would you like to derive a new one from it? If so, run $(format_code "task local:scenarios:create -- '${SCENARIO_NAME:?}-2' --based-on='${SCENARIO_NAME:?}'")"

info "Will create a new scenario named $(format_code "${SCENARIO_NAME:?}") based on $(format_code "${BASE_SCENARIO_NAME:?}")."

edo source "${SELF_SCRIPTS:?}"/scenario-files.sh

edo mkdir -p "${SCENARIOS_DIR:?}"/"${SCENARIO_NAME:?}"/{prosody,coredns}

copy-if-exists() {
	local file_path="${1:?}"
	if [ -e "${SCENARIOS_DIR:?}"/"${BASE_SCENARIO_NAME:?}"/"${file_path:?}" ]; then
		edo cp -Rf "${SCENARIOS_DIR:?}"/{"${BASE_SCENARIO_NAME:?}","${SCENARIO_NAME:?}"}/"${file_path:?}"
	fi
}

copy-if-exists 'prosody/'
copy-if-exists 'coredns/'

# NOTE: While it'd be easier to use symbolic links instead of copying files
#   from the `default` scenario, it wouldn't work because Docker wouldn't be
#   able to access the source files because they aren't mounted.
#   To make sure non-overridable files stay up-to-date, we created a task called
#   `task local:scenarios:update` which copies the files again.
log_as_trace_ "${SELF_SCRIPTS:?}"/scenarios-update "${SCENARIO_NAME:?}"

copy-if-exists constants.sh
copy-if-exists "$(basename "${PROSE_CONFIG_FILE:?}")"
copy-if-exists "$(basename "${ENV_FILE:?}")"
copy-if-exists "$(basename "${DNS_ZONE_FILE:?}")"
copy-if-exists "$(basename "${DATABASE_PATH:?}")"
copy-if-exists "$(basename "${MAILPIT_DATABASE_PATH:?}")"

# NOTE: When running in a GitHub Action, `cp /etc/prosody/prosody{.initial,}.cfg.lua` fails
#   because `$LOCAL_RUN_DIR/scenarios/$SCENARIO_NAME/prosody` belongs to `runner:docker`.
# NOTE: Because of `set -e`, we'd have to use `[ … ] && … || :`.
#   Let's use `if [ … ]; then …; fi` instead for clarity.
if [ -n "$GITHUB_ACTIONS" ]; then
	sudo chmod -R a+w "${LOCAL_RUN_DIR:?}"/scenarios/"${SCENARIO_NAME:?}"/prosody
fi
