#!/bin/bash

# Configure the script to exit when a command fails.
set -e

: ${SCRIPTS_ROOT:="$(dirname $0)"/../../scripts}
export SCRIPTS_ROOT
source "${SCRIPTS_ROOT:?}"/util.sh

# ===== CONSTANTS =====

LOCAL_RUN_DIR="${PROSE_POD_API_DIR:?}"/local-run
SELF_SCRIPTS="${LOCAL_RUN_DIR:?}"/scripts
source "${SELF_SCRIPTS:?}"/constants.sh
BASE_SCENARIO_NAME="${DEFAULT_SCENARIO_NAME:?}"

# ===== ARGUMENT PARSING =====

SCENARIO_NAME="${1:?}"
shift 1

for arg in "$@"; do
	case $arg in
		--based-on=*)
			BASE_SCENARIO_NAME="${arg#'--based-on='}"
			;;
		--help) help ;;
		--dry-run) export DRY_RUN=1 ;;
		--debug) export LOG_DEBUG=1 ;;
		--trace) export LOG_TRACE=1 ;;
		*) die "Unknown argument: $(format_code $arg).\n$(usage)" ;;
	esac
done

# ===== MAIN LOGIC =====

[ -d "${SCENARIOS_DIR:?}"/"${SCENARIO_NAME:?}" ] && die "The scenario $(format_code "${SCENARIO_NAME:?}") already exists. Would you like to derive a new one from it? If so, run $(format_code "task local:scenarios:create -- '${SCENARIO_NAME:?}-2' --based-on='${SCENARIO_NAME:?}'")"

info "Will create a new scenario named $(format_code "${SCENARIO_NAME:?}") based on $(format_code "${BASE_SCENARIO_NAME:?}")."

edo mkdir -p "${SCENARIOS_DIR:?}"/"${SCENARIO_NAME:?}"/{prosody/{config,data},coredns}

# NOTE: While it'd be easier to use symbolic links instead of copying files
#   from the `default` scenario, it wouldn't work because Docker wouldn't be
#   able to access the source files because they aren't mounted.
#   To make sure non-overridable files stay up-to-date, we created a task called
#   `task local:scenarios:update` which copies the files again.
log_as_trace_ "${SELF_SCRIPTS:?}"/scenarios-update "${SCENARIO_NAME:?}"

edo cp "${SCENARIOS_DIR:?}"/{"${BASE_SCENARIO_NAME:?}","${SCENARIO_NAME:?}"}/Prose.toml
edo cp "${SCENARIOS_DIR:?}"/{"${BASE_SCENARIO_NAME:?}","${SCENARIO_NAME:?}"}/local-run.env
edo cp "${SCENARIOS_DIR:?}"/{"${BASE_SCENARIO_NAME:?}","${SCENARIO_NAME:?}"}/dns-zone.zone
if [ -f "${SCENARIOS_DIR:?}"/"${BASE_SCENARIO_NAME:?}"/database.sqlite ]; then
	edo cp "${SCENARIOS_DIR:?}"/{"${BASE_SCENARIO_NAME:?}","${SCENARIO_NAME:?}"}/database.sqlite
fi
